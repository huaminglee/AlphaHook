// Index.js
// (auto-generated by the Sequelize CLI)
// =====================================
'use strict';

var fs        = require('fs');
var path      = require('path');
var Sequelize = require('sequelize');
var basename  = path.basename(module.filename);
var env       = process.env.NODE_ENV || 'development';
var config    = require(__dirname + '/../config/config.json')[env];
var db        = {};
const Op = Sequelize.Op;
if (config.use_env_variable) {
  var sequelize = new Sequelize(process.env[config.use_env_variable]);
} else {
  var sequelize = new Sequelize(config.database, config.username, config.password, config);
}

fs
  .readdirSync(__dirname)
  .filter(function(file) {
    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');
  })
  .forEach(function(file) {
    var model = sequelize['import'](path.join(__dirname, file));
    db[model.name] = model;
  });

Object.keys(db).forEach(function(modelName) {
  if (db[modelName].associate) {
    db[modelName].associate(db);
  }
});

db.sequelize = sequelize;

//Models/tables
db.Users = require('../models/users.js')(sequelize, Sequelize);  
db.UserProfile = require('../models/alphaHookModel.js')(sequelize, Sequelize);  
db.UserSurvey = require('../models/userSurveyModel.js')(sequelize, Sequelize);  
db.UserGoals = require('../models/userGoals.js')(sequelize, Sequelize);  

//Relations
db.UserProfile.belongsTo(db.Users, {onDelete: 'cascade'});  
db.Users.hasMany(db.UserProfile); 

db.UserSurvey.belongsTo(db.UserProfile, {onDelete: 'cascade'});  
db.UserProfile.hasMany(db.UserSurvey);  

db.UserGoals.belongsTo(db.UserProfile, {onDelete: 'cascade'}); 
db.UserProfile.hasMany(db.UserGoals);

module.exports = db;
